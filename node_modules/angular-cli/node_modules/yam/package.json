{
  "name": "yam",
  "description": "Dead simple storage interface",
  "version": "0.0.18",
  "keywords": [
    "storage",
    "config"
  ],
  "author": {
    "name": "Alex Navasardyan",
    "email": "alex.navasardyan@gmail.com",
    "url": "http://twokul.io"
  },
  "main": "lib/yam.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twokul/yam.git"
  },
  "dependencies": {
    "findup": "^0.1.5",
    "fs-extra": "^0.16.3",
    "lodash.merge": "^3.0.2"
  },
  "devDependencies": {
    "jshint": "~2.3.0",
    "mocha": "*",
    "chai": "^1.9.1",
    "rewire": "^2.0.0"
  },
  "scripts": {
    "test": "jshint lib/*.js test/*.js && mocha --reporter spec test/*-test.js"
  },
  "readme": "yam\n====\n\n[![Build Status](https://travis-ci.org/twokul/yam.svg)](https://travis-ci.org/twokul/yam)\n\nDead simple lazy storage interface, useful to store cli or project settings. The file being parsed is expected in valid JSON format that can include comments.\n\n#### Yam Constructor\n```javascript\nvar Yam = require('yam');\n\n//looks for a .test file in the current directory as well as your home directory\nvar yam = new Yam('test');\n\n//customize where the file is located\nvar yam = new Yam('test', {\n  primary: 'path/to/primary/location',\n  secondary: 'path/to/secondary/location'\n});\n```\n\n`.test` file example:\n```javascript\n{\n  //comments are valid\n  'foo': 'bar'\n}\n```\n\n#### Get\n\n```javascript\nyam.get('foo'); // => 'bar'\n```\n#### GetAll\n\n```javascript\nyam.getAll();\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/twokul/yam/issues"
  },
  "homepage": "https://github.com/twokul/yam#readme",
  "_id": "yam@0.0.18",
  "_shasum": "e5cab771f0fc80ca599814cb9c269cb8bff00e2c",
  "_resolved": "https://registry.npmjs.org/yam/-/yam-0.0.18.tgz",
  "_from": "https://registry.npmjs.org/yam/-/yam-0.0.18.tgz"
}
