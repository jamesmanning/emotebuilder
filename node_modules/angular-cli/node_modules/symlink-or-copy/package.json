{
  "name": "symlink-or-copy",
  "description": "Symlink files or directories, falling back to copying on Windows",
  "version": "1.1.3",
  "author": {
    "name": "Jo Liss",
    "email": "joliss42@gmail.com"
  },
  "main": "index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/broccolijs/node-symlink-or-copy.git"
  },
  "scripts": {
    "test": "mocha tests/",
    "test:debug": "mocha debug tests"
  },
  "devDependencies": {
    "mocha": "^2.2.4"
  },
  "readme": "# node-symlink-or-copy\n\n[![Build Status](https://travis-ci.org/broccolijs/node-symlink-or-copy.svg?branch=master)](https://travis-ci.org/broccolijs/node-symlink-or-copy)\n[![Build status](https://ci.appveyor.com/api/projects/status/rilxgmo21j3qth3v/branch/master?svg=true)](https://ci.appveyor.com/project/joliss/node-symlink-or-copy/branch/master)\n\nSymlink a file or directory to another place. Fall back to copying on Windows.\nMade for use with Broccoli plugins, for \"do what I mean\" behavior.\n\n## Installation\n\n```sh\nnpm install --save symlink-or-copy\n```\n\n## Example\n\n```js\nvar symlinkOrCopySync = require('symlink-or-copy').sync;\n\nsymlinkOrCopySync('src_dir/some_file.txt', 'dest_dir/some_file.txt');\nsymlinkOrCopySync('src_dir/some_dir', 'dest_dir/some_dir');\n```\n\n## Description\n\n```js\nsymlinkOrCopySync(srcPath, destPath)\n```\n\nCreate a symlink at `destPath` pointing to `srcPath`.\n\nOn Windows, we may fall back to copying `srcPath` to `destPath`, preserving\nlast-modified times. However, do not *rely* on always getting a copy on\nWindows (see Notes below).\n\nIf you pass a relative `srcPath`, it will be resolved relative to\n`process.cwd()`, akin to a copy function. Note that this is unlike\n[`fs.symlinkSync`](http://nodejs.org/api/fs.html#fs_fs_symlink_srcpath_dstpath_type_callback),\nwhose `srcPath` is relative to `destPath`.\n\nIf `srcPath` does not exist or is a broken symlink, we might throw an\nexception, or we might create a broken symlink.\n\nWhen we fall back to copying, symlinks at or beneath `srcPath` will be\ndereferenced, and broken symlinks will cause exceptions.\n\nWe will throw an exception if `destPath` already exists. Thus in contrast to\nUnix `cp` or `ln`, the following will fail:\n\n```js\n// dest_dir already exists, and we might expect dest_dir/some_dir to be\n// created. This does not work; pass 'dest_dir/some_dir' instead.\nsymlinkOrCopySync('src_dir/some_dir', 'dest_dir');\n```\n\nIt is an error if the parent directory of `destPath` does not already exist.\n\nWhen we symlink, if the file at `srcPath` is a symlink as well, it will be\ndereferenced before symlinking, to avoid runaway symlink indirection.\n\n## Notes\n\n* Symlinks technically work on Windows, but they require special rights. For\n  users with those rights, symlinks are used, but when not available, a\n  combination of junctions and copying is used to mimic the behavior somewhat\n  performantly.\n\n* There intentionally isn't an asynchronoukks version. It's not clear that we\n  need or want one. Before sending a patch to add an async version, please\n  share your use case on the issue tracker.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/broccolijs/node-symlink-or-copy/issues"
  },
  "homepage": "https://github.com/broccolijs/node-symlink-or-copy#readme",
  "_id": "symlink-or-copy@1.1.3",
  "_shasum": "6cfe1dc98c8b838d5d8c1e56ddd4967ff77c11f1",
  "_resolved": "https://registry.npmjs.org/symlink-or-copy/-/symlink-or-copy-1.1.3.tgz",
  "_from": "https://registry.npmjs.org/symlink-or-copy/-/symlink-or-copy-1.1.3.tgz"
}
