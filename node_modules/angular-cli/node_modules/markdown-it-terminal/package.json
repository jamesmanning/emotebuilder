{
  "name": "markdown-it-terminal",
  "version": "0.0.3",
  "description": "Plugin for markdown-it to parse and output markdown formatted for the terminal",
  "main": "index.js",
  "scripts": {
    "test": "mocha tests/test"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/trabus/markdown-it-terminal.git"
  },
  "keywords": [
    "markdown",
    "markdown-it",
    "terminal",
    "cardinal",
    "markdown-to-terminal"
  ],
  "author": {
    "name": "Jake Bixby"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/trabus/markdown-it-terminal/issues"
  },
  "homepage": "https://github.com/trabus/markdown-it-terminal",
  "dependencies": {
    "ansi-styles": "^2.1.0",
    "cardinal": "^0.5.0",
    "cli-table": "^0.3.1",
    "lodash.merge": "^3.3.2",
    "markdown-it": "^4.4.0"
  },
  "devDependencies": {
    "chai": "^2.3.0",
    "mocha": "^2.3.4"
  },
  "readme": "markdown-it-terminal\n===\n[![Build Status](https://travis-ci.org/trabus/markdown-it-terminal.svg)](https://travis-ci.org/trabus/markdown-it-terminal)\n\nThis is a plugin to provide ansi terminal output for markdown-it. It is heavily inspired by [marked-terminal](https://github.com/mikaelbr/marked-terminal), a terminal renderer for the marked library.\n\n__This library is not officially supported by markdown-it.__\n\n## Install\n\n`npm install markdown-it markdown-it-terminal`\n\n## Usage\n\n`markdown-it` provides a method for extending it with plugins.\n```js\nvar markdown = require('markdown-it');\nvar terminal = require('markdown-it-terminal');\n\nmarkdown.use(terminal);\n```\n\nYou can override the default options if you choose.\n```js\nvar styles   = require('ansi-styles');\nvar markdown = require('markdown-it');\nvar terminal = require('markdown-it-terminal');\n\nvar options = {\n  styleOptions: {\n    code: styles.green\n  }\n}\nmarkdown.use(terminal, options);\n// inline code now prints in green instead of the default yellow\n```\n\n## Options\n`markdown-it-terminal` takes several options, most of which are to override existing defaults.\n```js\nvar options = {\n  styleOptions:{},\n  highlight: require('cardinal').highlight,\n  unescape: true\n}\n```\n\n### styleOptions\nStyles are defined per token, and make use of the `ansi-styles` library, which provides a number of open and close values for ansi codes.\n\nIn the most basic implementation, you can simply provide a supported style like so:\n```js\nvar styles   = require('ansi-styles');\n\nvar options = {\n  styleOptions: {\n    code: styles.green\n  }\n}\n```\n`markdown-it-terminal` exposes a utility method to build compound styles, using an array of style names (must be supported by `ansi-styles`).\n\n```js\nvar styles   = require('ansi-styles');\nvar terminal = require('markdown-it-terminal');\n\nvar options = {\n  styleOptions: {\n    code: terminal.compoundStyle(['green','underline'])\n  }\n}\n```\n\nThe following tokens can be overridden through styleOptions:\n* code\n* blockquote\n* html\n* heading\n* firstHeading\n* hr\n* listitem\n* table\n* paragraph\n* strong\n* em\n* codespan\n* del\n* link\n* href\n\n### highlight\nHighlight function to parse code blocks. Should be a function that takes a string and outputs a formatted string.\n\n### unescape\nUnescape content, `true` by default.\n\n## Highlighting\n`markdown-it-terminal` uses the [cardinal](https://github.com/thlorenz/cardinal) library \nfor code highlight support by default.\n\n## Windows Support\nBecause ansi is not supported on cmd.exe, `markdown-it-terminal` only works on Windows shells with ansi support.",
  "readmeFilename": "README.md",
  "_id": "markdown-it-terminal@0.0.3",
  "_shasum": "c77a8533c2170b46d2a907a3c3452d4d7f4aa5db",
  "_resolved": "https://registry.npmjs.org/markdown-it-terminal/-/markdown-it-terminal-0.0.3.tgz",
  "_from": "https://registry.npmjs.org/markdown-it-terminal/-/markdown-it-terminal-0.0.3.tgz"
}
