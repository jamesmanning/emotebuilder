{
  "name": "leek",
  "description": "GA tracking",
  "version": "0.0.21",
  "keywords": [
    "stats",
    "google",
    "analytics",
    "track",
    "metrics"
  ],
  "author": {
    "name": "Alex Navasardyan",
    "email": "alex.navasardyan@gmail.com",
    "url": "http://twokul.io"
  },
  "main": "lib/leek.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/twokul/leek.git"
  },
  "dependencies": {
    "debug": "^2.1.0",
    "lodash.assign": "^3.2.0",
    "request": "^2.27.0",
    "rsvp": "^3.0.21"
  },
  "devDependencies": {
    "jshint": "~2.3.0",
    "mocha": "*",
    "chai": "^1.9.1",
    "rewire": "^2.0.0"
  },
  "scripts": {
    "test": "jshint lib/*.js test/*.js && mocha --reporter spec test/*-test.js"
  },
  "readme": "## Leek\n\n[![Build Status](https://travis-ci.org/twokul/leek.svg)](https://travis-ci.org/twokul/leek)\n\nInitial implementation was based on [Insight](https://github.com/yeoman/insight).\n\n### Track Events:\n\n```javascript\nvar Leek = require('./lib/leek'),\n    leek = new Leek({\n      trackingCode: 'xx-xxxxxxxx-x',\n      globalName:   'my-nifty-package',\n      version:      '1.0.1'\n    });\n\nleek.trackEvent({\n  name:     'my-nifty-package',\n  category: 'pony show',\n  label:    'white',\n  value:    'jumps'\n});\n```\n\n### Track Errors:\n\n```javascript\nvar Leek = require('./lib/leek'),\n    leek = new Leek({\n      trackingCode: 'xx-xxxxxxxx-x',\n      name:         'my-nifty-package',\n      version:      '1.0.1'\n    });\n\ntry {\n  throw new Error('ZOMG FIX ME')\n} catch(e) {\n  leek.trackError({\n    description: e.message + ' ' + e.stack,\n    isFatal: true\n  });\n}\n```\n\n### Track command hits:\n\n```javascript\nvar Leek = require('./lib/leek'),\n    leek = new Leek({\n      trackingCode: 'xx-xxxxxxxx-x',\n      name:         'my-nifty-package',\n      version:      '1.0.1'\n    });\n\nleek.track({\n  name:    'my-nifty-package show pony',\n  message: 'pony is here'\n});\n```\n\n### Disable Tracking:\n\n#### Environment Variable\n\nSetting the `DISABLE_LEEK` environment variable will disable tracking.\n\n#### Alternative Tracking Endpoints\n\nPassing in an object of adapter URLs will send the data to alternative tracking service.\n\n```javascript\nvar Leek = require('./lib/leek');\nvar leek = new Leek({\n  trackingCode: 'xx-xxxxxxxx-x',\n  name:         'my-nifty-package',\n  version:      '1.0.1',\n  adapterUrls: {\n    appview: 'http://example.com/collect-app',\n    exception: 'http://example.com/collect-exception',\n    timing: 'http://example.com/collect-timing',\n    event: 'http://example.com/collect-event'\n  }\n});\n```\n\n#### Constructor Options\n\n```javascript\nvar Leek = require('./lib/leek');\nvar leek = new Leek({\n  trackingCode: 'xx-xxxxxxxx-x',\n  name:         'my-nifty-package',\n  version:      '1.0.1',\n  silent:       true\n});\n```\n\n### GA Setup\nYou are now able to set up alternative tracking services but to set up GA follow these steps:\n\n* Set your new property up as a Mobile App\n* Add the Tracking ID in your leek initialisation as seen above.\n* To add the NodeJS as well as OS Version tracking go to the Admin -> Custom Definitions -> Custom Metrics\n* Add a new Custom Dimenstion with the Name `OS` and Scope `Session`\n* Add a second Custom Dimenstion with the Name `Node Version` and Scope `Session` as well\n* Make sure they are both active and you have everything you need to get the tracking running properly\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/twokul/leek/issues"
  },
  "homepage": "https://github.com/twokul/leek#readme",
  "_id": "leek@0.0.21",
  "_shasum": "09804bf70f8aefbba745f5d56d2a4debf22711ff",
  "_resolved": "https://registry.npmjs.org/leek/-/leek-0.0.21.tgz",
  "_from": "https://registry.npmjs.org/leek/-/leek-0.0.21.tgz"
}
