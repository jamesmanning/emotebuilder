{
  "name": "exists-sync",
  "version": "0.0.3",
  "description": "existsSync that also checks for symlinks",
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "keywords": [
    "fs",
    "existsSync",
    "exists",
    "lstatSync"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ember-cli/exists-sync.git"
  },
  "author": {
    "name": "Jake Bixby"
  },
  "license": "ISC",
  "homepage": "https://github.com/ember-cli/exists-sync#readme",
  "devDependencies": {
    "chai": "^3.0.0",
    "fs-extra": "^0.19.0",
    "mocha": "^2.2.5"
  },
  "readme": "exists-sync\n===========\n[![Build Status](https://travis-ci.org/ember-cli/exists-sync.svg)](https://travis-ci.org/ember-cli/exists-sync) [![Build status](https://ci.appveyor.com/api/projects/status/c05xyb4s80pn66yo?svg=true)](https://ci.appveyor.com/project/embercli/exists-sync)\n\nReplacement for [fs.existsSync()](https://nodejs.org/api/fs.html#fs_fs_exists_path_callback), which is being deprecated: \n\n> \"fs.exists() is an anachronism and exists only for historical reasons. There should almost never be a reason to use it in your own code.\n\n> In particular, checking if a file exists before opening it is an anti-pattern that leaves you vulnerable to race conditions: another process may remove the file between the calls to fs.exists() and fs.open(). Just open the file and handle the error when it's not there.\"\n\n`exists-sync` will recursively follow symlinks to verify the target file exists, rather than giving a false positive on a symlink whose target has been removed.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/ember-cli/exists-sync/issues"
  },
  "_id": "exists-sync@0.0.3",
  "_shasum": "b910000bedbb113b378b82f5f5a7638107622dcf",
  "_resolved": "https://registry.npmjs.org/exists-sync/-/exists-sync-0.0.3.tgz",
  "_from": "https://registry.npmjs.org/exists-sync/-/exists-sync-0.0.3.tgz"
}
